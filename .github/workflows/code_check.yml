name: CI - Code Checks & Tests
run-name: Checks Rust code on ${{ github.event_name }}

on:
  push:
    branches-ignore:
      - "wip*"
    paths:
      - ".github/workflows/code_check.yml"
      - "Cargo.*"
      - "src/**"
  pull_request:
    paths:
      - ".github/workflows/code_check.yml"
      - "Cargo.*"
      - "src/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  ci_code_checks_and_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        features: [default, profile-with-puffin]

    name: Code Checks for ${{ matrix.features }} feature(s)

    steps:
      - name: "Install dependencies Ubuntu"
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends build-essential pkg-config
          sudo apt-get install -y libleptonica-dev libtesseract-dev

      - name: "Install rust-toolchain stable"
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: "Show environment"
        run: |
          rustc -vV
          cargo -vV

      - name: "Checkout"
        uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "ghw_checks"
          key: "${{ matrix.features }}"
          cache-on-failure: true # useful for don't rebuild dependencies on fix after failure

      - name: "Run repository checks"
        uses: ./.github/actions/checks
        with:
          features: --features ${{ matrix.features }}
